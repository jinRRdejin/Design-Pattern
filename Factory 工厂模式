1.定义
定义一个用于创建对象的接口，让子类决定实例化哪个类。
2.介绍
工厂方法模式主要用来创建复杂的对象，简单对象能够使用new来创建就不用工厂方法模式来创建了

3角色说明：

Product（抽象产品类）：要创建的复杂对象，定义对象的公共接口。
ConcreteProduct（具体产品类）：实现Product接口。
Factory（抽象工厂类）：该方法返回一个Product类型的对象。
ConcreteFactory（具体工厂类）：返回ConcreteProduct实例。

5.应用场景
生成复杂对象时，无需知道具体类名，只需知道相应的工厂方法即可。

6.优点
符合开放封闭原则。新增产品时，只需增加相应的具体产品类和相应的工厂子类即可。
符合单一职责原则。每个具体工厂类只负责创建对应的产品。

7.缺点
一个具体工厂只能创建一种具体产品。
增加新产品时，还需增加相应的工厂类，系统类的个数将成对增加，增加了系统的复杂度和性能开销。
引入的抽象类也会导致类结构的复杂化。
